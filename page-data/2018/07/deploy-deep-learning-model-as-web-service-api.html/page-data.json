{"componentChunkName":"component---src-templates-post-template-js","path":"/2018/07/deploy-deep-learning-model-as-web-service-api.html","result":{"data":{"markdownRemark":{"id":"621d1917-b5c3-542e-9c24-41448e324f9f","html":"<p>Trong bài này mình sẽ hướng dẫn deploy 1 model Deep learning, cụ thể là Keras dưới dạng một web service API. Sử dụng Flask framework python và Redis server như một Messeage Queue. Cấu trúc hệ thống sẽ như sau:</p>\n<p><img src=\"https://3.bp.blogspot.com/-msPb3Y2WcN8/W9nW7gASaMI/AAAAAAAA04w/P9xEh3pGAN8pRsJmaTgFHqssjUToQHo3wCLcBGAs/s640/deep-learning-web-app.png\"></p>\n<!-- more -->\n<p>Mã nguồn trong bài viết này các bạn xem tại đây: <a href=\"https://github.com/duyet/deep-learning-web-app\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/duyet/deep-learning-web-app</a></p>\n<p>Như hình trên, chúng ta sẽ có một server.py và một worker.py</p>\n<ol>\n<li>server.py sử dụng flask làm API, nhận POST request từ client là một tấm ảnh, sau đó chuyển ảnh đó thành base64, generate ID cho ảnh và đẩy vào queue trong Redis.\nserver cũng sẽ đợi một giá trị trong redis, có KEY=&#x3C;ID của ảnh> </li>\n<li>worker.py check redis queue liên tục, lấy ảnh ra và decode file ảnh, làm input cho model Keras. Kết quả của model predict() sẽ được push ngược lại redis, KEY=&#x3C;ID của ảnh>, VALUE=<predict output>. Đồng thời xóa ảnh khỏi redis queue.</li>\n<li>server.py lúc này đã tìm được giá trị cho KEY=&#x3C;ID của ảnh>, trả kết quả về cho client.</li>\n</ol>\n<p>Bạn có thể cài đặt như hướng dẫn trong Github.</p>\n<h4 id=\"1-cài-redis-server\" style=\"position:relative;\"><a href=\"#1-c%C3%A0i-redis-server\" aria-label=\"1 cài redis server permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Cài redis-server</h4>\n<p>Trong Ubuntu, sử dụng lệnh:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> -y redis redis-server</code></pre></div>\n<p>Kiểm tra redis server:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ redis-cli <span class=\"token function\">ping</span>\nPONG</code></pre></div>\n<h4 id=\"2-tạo-môi-trường-ảo-và-cài-đặt-các-thư-viện\" style=\"position:relative;\"><a href=\"#2-t%E1%BA%A1o-m%C3%B4i-tr%C6%B0%E1%BB%9Dng-%E1%BA%A3o-v%C3%A0-c%C3%A0i-%C4%91%E1%BA%B7t-c%C3%A1c-th%C6%B0-vi%E1%BB%87n\" aria-label=\"2 tạo môi trường ảo và cài đặt các thư viện permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Tạo môi trường ảo và cài đặt các thư viện:</h4>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">virtualenv venv                   <span class=\"token comment\"># create virtual environment folder</span>\n<span class=\"token builtin class-name\">source</span> ./venv/bin/activate        <span class=\"token comment\"># activate env</span>\npip <span class=\"token function\">install</span> -r requirements.txt   <span class=\"token comment\"># install packages</span></code></pre></div>\n<h4 id=\"3-run-workerpy\" style=\"position:relative;\"><a href=\"#3-run-workerpy\" aria-label=\"3 run workerpy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Run worker.py</h4>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">python worker.py</code></pre></div>\n<h4 id=\"4-mở-terminal-khác-khởi-động-serverpy\" style=\"position:relative;\"><a href=\"#4-m%E1%BB%9F-terminal-kh%C3%A1c-kh%E1%BB%9Fi-%C4%91%E1%BB%99ng-serverpy\" aria-label=\"4 mở terminal khác khởi động serverpy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Mở terminal khác, khởi động server.py</h4>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">python server.py</code></pre></div>\n<h4 id=\"5-sử-dụng-postman-hoặc-curl-để-test\" style=\"position:relative;\"><a href=\"#5-s%E1%BB%AD-d%E1%BB%A5ng-postman-ho%E1%BA%B7c-curl-%C4%91%E1%BB%83-test\" aria-label=\"5 sử dụng postman hoặc curl để test permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. Sử dụng Postman hoặc cURL để test:</h4>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">curl</span> -X POST http://localhost:5000/predict <span class=\"token punctuation\">\\</span>\n        -F <span class=\"token string\">'image=@file.png'</span></code></pre></div>\n<p>Kết quả sẽ có dạng như sau:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"predictions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"web_site\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"probability\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0.8858472108840942</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"bow_tie\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"probability\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0.06905359774827957</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"laptop\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"probability\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0.015353902243077755</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"monitor\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"probability\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0.005411265417933464</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"notebook\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"probability\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0.0035434039309620857</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"success\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Server.py nhận được request là tấm ảnh, tiền xử lý và encode base64, generate ra ID của ảnh dưới dạng UUID4, dòng 61-65 khung màu xanh.</p>\n<p><a href=\"https://github.com/duyet/deep-learning-web-app/blob/master/server.py#L62-L65\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><img src=\"https://2.bp.blogspot.com/-VcF18CjXrN8/W1IT6IMiVnI/AAAAAAAAxZk/KoVMaBpI2kIpH9wMZR2yyY6Ua0kZKhLOgCLcBGAs/s1600/p2.PNG\"></a></p>\n<p><a href=\"https://github.com/duyet/deep-learning-web-app/blob/master/server.py#L62-L65\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/duyet/deep-learning-web-app/blob/master/server.py#L62-L65</a></p>\n<p>Khung màu cam: Sau khi push vào queue, server sẽ đợi để load kết quả JSON trong redis, <code class=\"language-text\">KEY=&lt;ID của ảnh&gt;</code>. Sau đó trả kết quả về client.</p>\n<p>Trong <code class=\"language-text\">worker.py</code> mình sử dụng mô hình pre-trained <a href=\"https://keras.io/applications/#resnet50\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ResNet50</a> có sẵn của Keras, là một mạng dùng để nhận dạng trong ảnh.</p>\n<p><a href=\"https://github.com/duyet/deep-learning-web-app/blob/master/worker.py#L20\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><img src=\"https://2.bp.blogspot.com/-sY7FkoETCwE/W1ISXjDWZDI/AAAAAAAAxZY/fWLlDgMBsYUqbdq2P9S1S6-IPk50ZExmQCLcBGAs/s1600/p1.PNG\"></a><a href=\"https://github.com/duyet/deep-learning-web-app/blob/master/worker.py#L20\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/duyet/deep-learning-web-app/blob/master/worker.py#L20</a></p>\n<p>Worker sẽ load danh sách ảnh trong queue ra, theo batch (số lượng ảnh worker có thể xử lý dùng 1 lúc), với từng ảnh chúng ta decode base64 để có được ảnh gốc khung màu đỏ. Chạy <code class=\"language-text\">model.predict()</code> và lưu kết quả vào redis theo <code class=\"language-text\">KEY=&lt;ID&gt;</code>.</p>\n<p><a href=\"https://github.com/duyet/deep-learning-web-app/blob/master/worker.py#L56-L57\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><img src=\"https://3.bp.blogspot.com/-SggMg0bZpc0/W1IV6zx-EoI/AAAAAAAAxZw/UzLguNzjCcUoeOS-BaqK9xwlNlkl2VoMgCLcBGAs/s1600/p3.PNG\"></a></p>\n<p><a href=\"https://github.com/duyet/deep-learning-web-app/blob/master/worker.py#L56-L57\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/duyet/deep-learning-web-app/blob/master/worker.py#L56-L57</a></p>\n<p>Như trên là bạn đã có thể hình dung cách deploy mô hình machine learning dưới dạng 1 API service như thế nào rồi. Kiến trúc trên thực tế sẽ có nhiều thứ phức tạp hơn cần cải tiến, ví dụ như lưu trữ ảnh trong Redis không phải là một cách hay, cơ chế để scaling nhiều worker, vv…</p>\n<p>Hy vọng bài viết có thể giúp bạn hiểu hơn phần nào, vui lòng comment nếu có bất cứ thắc mắc nào nhé.</p>","fields":{"slug":"/2018/07/deploy-deep-learning-model-as-web-service-api.html","tagSlugs":["/tag/data-engineer/","/tag/redis/","/tag/python/","/tag/flask/","/tag/keras/","/tag/data-science/","/tag/machine-learning/"]},"frontmatter":{"date":"2018-07-21T00:16:00.000+07:00","description":"Trong bài này mình sẽ hướng dẫn deploy 1 model Deep learning, cụ thể là Keras dưới dạng một web service API. Sử dụng Flask framework python và Redis server như một Messeage Queue.","tags":["Data Engineer","Redis","Python","Flask","Keras","Data Science","Machine Learning"],"title":"Deploy Deep Learning model as a web service API","fbCommentUrl":null}}},"pageContext":{"slug":"/2018/07/deploy-deep-learning-model-as-web-service-api.html"}}}