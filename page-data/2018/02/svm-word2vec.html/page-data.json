{"componentChunkName":"component---src-templates-post-template-js","path":"/2018/02/svm-word2vec.html","result":{"data":{"markdownRemark":{"id":"20688d46-63d7-53ba-afe8-b8c4e4eef7a0","html":"<p>Trong chuỗi bài viết này mình sử sử dụng thuật toán SVM để phân lớp sentiment (cảm xúc) cho văn bản, kết hợp với ứng dụng Word2vec để biểu diễn các text dưới dạng vector.    </p>\n<p>Bằng cách sử dụng 1 tập văn bản đã được gán nhãn sẵn. Mỗi câu được vector hóa sử dụng Word2vec (<a href=\"https://blog.duyet.net/2017/04/nlp-truyen-kieu-word2vec.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">xem lại Kiều2vec</a>). Được minh họa như hình dưới đây:</p>\n<p><img src=\"https://1.bp.blogspot.com/-1c0fyuos0NM/WpKQLj0AcCI/AAAAAAAAqn8/1z5hCc1pfmYWZVbSiveudFpVxaUel6sMACLcBGAs/s1600/SVM%2Bwith%2BWord2vec%2B%2528Figure%2529.png\"></p>\n<p>Các bước sẽ thực hiện:</p>\n<ol>\n<li>\n<p>Vector hóa từng câu văn bản:</p>\n<ul>\n<li>Tách từ cho từng câu. (E.g. <code class=\"language-text\">&quot;Duyệt đẹp trai quá&quot;</code> ==> [ <code class=\"language-text\">&quot;Duyệt&quot;</code>, <code class=\"language-text\">&quot;đẹp&quot;</code>, <code class=\"language-text\">&quot;trai&quot;</code>, <code class=\"language-text\">&quot;quá&quot;</code> ]</li>\n<li>Lọc bỏ stopwords (e.g. [ <code class=\"language-text\">&quot;Duyệt&quot;</code>, <code class=\"language-text\">&quot;đẹp&quot;</code>, <code class=\"language-text\">&quot;trai&quot;</code>, <code class=\"language-text\">&quot;quá&quot;</code> ] ==> [ <code class=\"language-text\">&quot;Duyệt&quot;</code>, <code class=\"language-text\">&quot;đẹp&quot;</code>, <code class=\"language-text\">&quot;trai&quot;</code> ]</li>\n<li>\n<p>Dùng Word2vec model (retrain) để biến mỗi từ thành 1 vector:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot;đẹp&quot; =&gt; [0.1123, 0.234, 0.256, 0.001, ...]\n&quot;train&quot; =&gt; [0.542, 0.124, 0.232, 0.124, ...]</code></pre></div>\n<p>Các vector này có số chiều cố định và giống nhau (phụ thuộc vào mô hình word2vec).</p>\n</li>\n<li>\n<p>Cộng (hoặc trung bình) các vector của từng từ trong một câu lại, ta được vector của một câu. Cách này khá đơn giản và chỉ dùng được khi câu ngắn (như 1 đoạn tweet). Với câu dài hơn cách biểu diễn này không còn chính xác nữa. Với văn bản lớn và dài, bạn nên <a href=\"http://blog.duyet.net/2017/10/doc2vec-trong-sentiment-analysis.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">sử dụng Doc2vec</a> thay thế.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">vec([ &quot;Duyệt&quot;, &quot;đẹp&quot;, &quot;trai&quot; ]) = [0.1123, 0.234, 0.256, 0.001, ...] + [0.542, 0.124, 0.232, 0.124, ...] + ...\n= [0.3421, 0.724, 0.242, 0.364, ...]</code></pre></div>\n</li>\n</ul>\n</li>\n<li>Train model SVM</li>\n<li>Test accuracy</li>\n</ol>\n<p>Từ các câu ở bước 1, qua mô hình ta có được mô hình phân lớp:</p>\n<p><a href=\"https://2.bp.blogspot.com/-SlTjMAtF-zk/WpKQIWEFIdI/AAAAAAAAqn4/Y4VQ88EW78IRq4d2YEGUG8iYBo9gt20WwCEwYBhgL/s1600/2%2B-%2BTrain%2Bmodel.png\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><img src=\"https://2.bp.blogspot.com/-SlTjMAtF-zk/WpKQIWEFIdI/AAAAAAAAqn4/Y4VQ88EW78IRq4d2YEGUG8iYBo9gt20WwCEwYBhgL/s1600/2%2B-%2BTrain%2Bmodel.png\"></a></p>\n<p>Từ model này, ta có thể dễ dàng tìm được sentiment của các vector văn bản khác, độ chính xác model phụ thuộc vào nhiều yếu tố (số lượng văn bản training, tham số, …), độ chính xác này có thể đo được thông qua các độ đo, bằng cách sử dụng tập văn bản test (đã biết trước nhãn) đi qua model của chúng ta.</p>\n<p><a href=\"https://1.bp.blogspot.com/-og76KxK6M_4/WpKQi0bPPTI/AAAAAAAAqoA/Q6lBVXaCnSoIsySwxdNPyxIO8MUPVosRACLcBGAs/s1600/3_model_using.png\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><img src=\"https://1.bp.blogspot.com/-og76KxK6M_4/WpKQi0bPPTI/AAAAAAAAqoA/Q6lBVXaCnSoIsySwxdNPyxIO8MUPVosRACLcBGAs/s1600/3_model_using.png\"></a></p>\n<p>Đây cũng là các bước cơ bản mà mọi thuật toán Machine Learning, NLP thực hiện.\nMình sẽ cập nhật source code và kết quả thực hiện step by step ở một bài viết khác nhé.</p>","fields":{"slug":"/2018/02/svm-word2vec.html","tagSlugs":["/tag/svm/","/tag/nlp/","/tag/word-2-vec/","/tag/machine-learning/"]},"frontmatter":{"date":"2018-02-25T17:35:00.001+07:00","description":"Trong chuỗi bài viết này mình sử sử dụng thuật toán SVM để phân lớp sentiment (cảm xúc) cho văn bản, kết hợp với ứng dụng Word2vec để biểu diễn các text dưới dạng vector.","tags":["SVM","NLP","Word2vec","Machine Learning"],"title":"Phân lớp SVM với Word2vec","fbCommentUrl":"http://blog.duyetdev.com/2018/02/svm-word2vec.html"}}},"pageContext":{"slug":"/2018/02/svm-word2vec.html"}}}