{"componentChunkName":"component---src-templates-post-template-tsx","path":"/2014/04/huong-dan-viet-game-flappy-bird-bang.html","result":{"data":{"markdownRemark":{"id":"b1bb9d4e-a439-535f-9e46-a1ea481ce904","html":"<p>Ở phần 1 của bài viết này, chúng ta đã biết cách xây dựng Flappy Bird Clone đơn giản. Phần 2 đã bổ xung thêm một số hiện ứng và âm thanh. Trong phần cuối cùng của bài viết này, mình sẽ hướng dẫn các bạn thêm 1 số thành phần khác để hoàn chỉnh game của chúng ta. Bắt đầu nào!</p>\n<h2 id=\"ý-tưởng\" style=\"position:relative;\"><a href=\"#%C3%BD-t%C6%B0%E1%BB%9Fng\" aria-label=\"ý tưởng permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ý tưởng</h2>\n<p>Bạn có thể xem trước kết quả những gì chúng ta sẽ làm ngày hôm nay <a href=\"https://jsfiddle.net/lvduit/sw9HM/embedded/result/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">tại đây</a>.\nChúng ta sẽ cùng nhau code thêm 1 số thứ sau đây như Loading Screen, Menu chọn, và actual.\nMỗi thành phần của 1 game ta gọi là 1 state. Hai phần trước của bài viết chúng ta mới chỉ xây dựng 1 state chính mà màn hình điều khiển chú chim. Trò chơi sẽ tự đông bắt đầu khi ta load game. Bây giờ chúng ta sẽ thêm 2 state nữa là Load State (màn hình chờ ấy), Menu state.\nKhi game được load chúng ta sẽ ở Load state, khi sẵn sàng sẽ chuyển sang menu state và chơi game. khi thua sẽ quay lại menu state. Ok hình dung rồi chứ :)\nTa sẽ như sơ đồ dưới đây:</p>\n<p><img src=\"https://4.bp.blogspot.com/-7exI9UlIZZ4/UzuVmrP-YRI/AAAAAAAAGgE/OjgRgxeToxU/s1600/diag.png\" alt=\"\"></p>\n<p>Tất cả các code chúng ta có thể viết chung 1 file .js duy nhất, nhưng mà để thuận tiện và dễ dàng cho các bạn thì mình sẽ tách thành 4 file với các chức năng khác nhau nha.</p>\n<h2 id=\"cài-đặt-code\" style=\"position:relative;\"><a href=\"#c%C3%A0i-%C4%91%E1%BA%B7t-code\" aria-label=\"cài đặt code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cài đặt code</h2>\n<p>Tải 4 file template của mình <a href=\"https://github.com/lvduit/phaser-tutorials/raw/master/4-flappy_bird/flappy_bird_basic.zip\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">tại đây</a>. Trong file nén gồm có:</p>\n<ul>\n<li>4 file js: <code class=\"language-text\">load.js</code>, <code class=\"language-text\">menu.js</code>, <code class=\"language-text\">play.js</code>, và <code class=\"language-text\">game.js</code> (4 file này đều rỗng nhé, mình tạo sẵn cho các bạn dễ hình dung)</li>\n<li>File <code class=\"language-text\">index.html</code> và thư viện <code class=\"language-text\">phaser.min.js</code></li>\n</ul>\n<p>Và bây giờ chúng ta hay code cho từng file js</p>\n<h2 id=\"loadjs\" style=\"position:relative;\"><a href=\"#loadjs\" aria-label=\"loadjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>load.js</h2>\n<p>State này rất đơn giản, nó sẽ reload các file resource mà chúng ta đã thấy trong các phần trước. Bây giờ chúng ta sẽ viết như sau:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> load_state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token function-variable function\">preload</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game<span class=\"token punctuation\">.</span>stage<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">'#71c5cf'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">.</span><span class=\"token function\">image</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bird'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'assets/bird.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">.</span><span class=\"token function\">image</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pipe'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'assets/pipe.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">.</span><span class=\"token function\">audio</span><span class=\"token punctuation\">(</span><span class=\"token string\">'jump'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'assets/jump.wav'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function-variable function\">create</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Sau khi đã load xong hết assets, chúng ta bắt đầu load state menu</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token string\">'menu'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2 id=\"menujs\" style=\"position:relative;\"><a href=\"#menujs\" aria-label=\"menujs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>menu.js</h2>\n<p>Tiếp theo là state menu. Đây là state hiển thị một menu hết sức đơn giản, nó chứa thông tin cách chơi game và hiển thị số điểm nếu game over.\nChú ý 2 điểm mới trong code sau đây:</p>\n<ul>\n<li>Biến score là biến toàn cục, để có thể lưu điểm số ở các state khác nhau</li>\n<li>Để xác định tọa độ để in text ra giữa màn hình chúng ta sử dụng game.world.width/2 và anchor.setTo(0.5, 0.5)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> menu_state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token function-variable function\">create</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Call the 'start' function when pressing the spacebar</span>\n        <span class=\"token keyword\">var</span> space_key <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>keyboard<span class=\"token punctuation\">.</span><span class=\"token function\">addKey</span><span class=\"token punctuation\">(</span>Phaser<span class=\"token punctuation\">.</span>Keyboard<span class=\"token punctuation\">.</span><span class=\"token constant\">SPACEBAR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        space_key<span class=\"token punctuation\">.</span>onDown<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n        <span class=\"token comment\">// Defining variables</span>\n        <span class=\"token keyword\">var</span> style <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> font<span class=\"token operator\">:</span> <span class=\"token string\">\"30px Arial\"</span><span class=\"token punctuation\">,</span> fill<span class=\"token operator\">:</span> <span class=\"token string\">\"#ffffff\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> game<span class=\"token punctuation\">.</span>world<span class=\"token punctuation\">.</span>width<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> game<span class=\"token punctuation\">.</span>world<span class=\"token punctuation\">.</span>height<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Adding a text centered on the screen</span>\n        <span class=\"token keyword\">var</span> text <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">-</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Press space to start\"</span><span class=\"token punctuation\">,</span> style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        text<span class=\"token punctuation\">.</span>anchor<span class=\"token punctuation\">.</span><span class=\"token function\">setTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n        <span class=\"token comment\">// If the user already played</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>score <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// Display its score</span>\n            <span class=\"token keyword\">var</span> score_label <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">+</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"score: \"</span> <span class=\"token operator\">+</span> score<span class=\"token punctuation\">,</span> style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            score_label<span class=\"token punctuation\">.</span>anchor<span class=\"token punctuation\">.</span><span class=\"token function\">setTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">// Start the actual game</span>\n    <span class=\"token function-variable function\">start</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token string\">'play'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"playjs\" style=\"position:relative;\"><a href=\"#playjs\" aria-label=\"playjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>play.js</h2>\n<p>Đây là phần chính của game, cũng giống như những phần trước, chỉ thay đổi 1 số thay đổi nhỏ thôi</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> play_state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// No more 'preload' function, since it is already done in the 'load' state</span>\n\n    <span class=\"token function-variable function\">create</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n        <span class=\"token keyword\">var</span> space_key <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>keyboard<span class=\"token punctuation\">.</span><span class=\"token function\">addKey</span><span class=\"token punctuation\">(</span>Phaser<span class=\"token punctuation\">.</span>Keyboard<span class=\"token punctuation\">.</span><span class=\"token constant\">SPACEBAR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        space_key<span class=\"token punctuation\">.</span>onDown<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>jump<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pipes <span class=\"token operator\">=</span> game<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pipes<span class=\"token punctuation\">.</span><span class=\"token function\">createMultiple</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pipe'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timer <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">.</span><span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token number\">1500</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>add_row_of_pipes<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           \n\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bird <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">sprite</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">245</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bird'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bird<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>gravity<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span> \n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bird<span class=\"token punctuation\">.</span>anchor<span class=\"token punctuation\">.</span><span class=\"token function\">setTo</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// No 'this.score', but just 'score'</span>\n        score <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> \n        <span class=\"token keyword\">var</span> style <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> font<span class=\"token operator\">:</span> <span class=\"token string\">\"30px Arial\"</span><span class=\"token punctuation\">,</span> fill<span class=\"token operator\">:</span> <span class=\"token string\">\"#ffffff\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>label_score <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span> style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>jump_sound <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">audio</span><span class=\"token punctuation\">(</span><span class=\"token string\">'jump'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function-variable function\">update</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bird<span class=\"token punctuation\">.</span>inWorld <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">restart_game</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bird<span class=\"token punctuation\">.</span>angle <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bird<span class=\"token punctuation\">.</span>angle <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game<span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span><span class=\"token function\">overlap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bird<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pipes<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hit_pipe<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      \n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function-variable function\">jump</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bird<span class=\"token punctuation\">.</span>alive <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> \n\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bird<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>velocity<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">350</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">tween</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bird<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>angle<span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">20</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>jump_sound<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function-variable function\">hit_pipe</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bird<span class=\"token punctuation\">.</span>alive <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bird<span class=\"token punctuation\">.</span>alive <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pipes<span class=\"token punctuation\">.</span><span class=\"token function\">forEachAlive</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            p<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>velocity<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function-variable function\">restart_game</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// This time we go back to the 'menu' state</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token string\">'menu'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function-variable function\">add_one_pipe</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> pipe <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pipes<span class=\"token punctuation\">.</span><span class=\"token function\">getFirstDead</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        pipe<span class=\"token punctuation\">.</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        pipe<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>velocity<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">200</span><span class=\"token punctuation\">;</span> \n        pipe<span class=\"token punctuation\">.</span>outOfBoundsKill <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function-variable function\">add_row_of_pipes</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> hole <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">!=</span> hole <span class=\"token operator\">&amp;&amp;</span> i <span class=\"token operator\">!=</span> hole <span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> \n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">add_one_pipe</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">*</span><span class=\"token number\">60</span><span class=\"token operator\">+</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \n\n        <span class=\"token comment\">// No 'this.score', but just 'score'</span>\n        score <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> \n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>label_score<span class=\"token punctuation\">.</span>content <span class=\"token operator\">=</span> score<span class=\"token punctuation\">;</span>  \n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"gamejs\" style=\"position:relative;\"><a href=\"#gamejs\" aria-label=\"gamejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>game.js</h2>\n<p>Phần cuối cùng, chúng ta sẽ ráp toàn bộ code vào Phaser để biên dịch và định nghĩa các state:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Initialize Phaser</span>\n<span class=\"token keyword\">var</span> game <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Phaser<span class=\"token punctuation\">.</span>Game</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">490</span><span class=\"token punctuation\">,</span> Phaser<span class=\"token punctuation\">.</span><span class=\"token constant\">AUTO</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'game_div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Our 'score' global variable</span>\n<span class=\"token keyword\">var</span> score <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Define all the states</span>\ngame<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'load'</span><span class=\"token punctuation\">,</span> load_state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \ngame<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'menu'</span><span class=\"token punctuation\">,</span> menu_state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \ngame<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'play'</span><span class=\"token punctuation\">,</span> play_state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\n<span class=\"token comment\">// Start with the 'load' state</span>\ngame<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token string\">'load'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </code></pre></div>\n<p>Và cuối cùng cũng đã hoàn thành rồi, bạn save toàn bộ code và upload lên trên Webserver để thưởng thức.\nGame vẫn còn nhiều chỗ để hoàn chỉnh giống như game gốc của anh Đông, nhưng mình sẽ dừng bài viết tại đây. Trên đây chỉ là những bước cơ bản nhất để bạn có thể hình dung các thực hiện 1 game đơn giản trên HTML5. Mọi thắc mắc các bạn có thể comment hoặc email cho mình :)</p>\n<p>Chúc bạn thành công và đón đọc các bài viết khác nhé.</p>","fields":{"slug":"/2014/04/huong-dan-viet-game-flappy-bird-bang.html","tagSlugs":["/tag/html-5/","/tag/game/","/tag/j-query/"]},"frontmatter":{"date":"2014-04-02T12:12:00.000+07:00","description":"Ở phần 1 của bài viết này, chúng ta đã biết cách xây dựng Flappy Bird Clone đơn giản. Phần 2 đã bổ xung thêm một số hiện ứng và âm thanh. Trong phần cuối cùng của bài viết này, mình sẽ hướng dẫn các bạn thêm 1 số thành phần khác để hoàn chỉnh game của chúng ta. Bắt đầu nào!","tags":["html5","game","jQuery"],"title":"Hướng dẫn viết game Flappy Bird bằng HTML5 - Phần 3","fbCommentUrl":null}}},"pageContext":{"slug":"/2014/04/huong-dan-viet-game-flappy-bird-bang.html"}},"staticQueryHashes":["251939775","2672868365","401334301"]}