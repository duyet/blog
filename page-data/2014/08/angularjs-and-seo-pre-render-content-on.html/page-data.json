{"componentChunkName":"component---src-templates-post-template-js","path":"/2014/08/angularjs-and-seo-pre-render-content-on.html","result":{"data":{"markdownRemark":{"id":"afd6d790-b722-5b75-8b1f-d0b79c5ddce7","html":"<p>The simple way to make this content SEO-friendly is to pre-render data on the server and then allow angular to do it’s job on the client.\nWith angular.js you have an HTML which looks like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token string\">\"{{\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>variableValue<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>li ng<span class=\"token operator\">-</span>repeat<span class=\"token operator\">=</span><span class=\"token string\">\"item in items\"</span> ng<span class=\"token operator\">-</span>bind<span class=\"token operator\">=</span><span class=\"token string\">\"item.name\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span></code></pre></div>\n<p>The simple way to make this content SEO-friendly is to pre-render data on the server and then allow angular to do it’s job on the client. For simple variables there is ng-bind. And for lists there is ng-include. Here is the example from above with pre-rendered content:  </p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">ng-bind</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>variableValue<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Static indexed value<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">ng-include</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>your/dynamic/list<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>seo-friendly item1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>seo-friendly item2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/ng-template<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>your/dynamic/list<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token operator\">&lt;</span>li ng<span class=\"token operator\">-</span>repeat<span class=\"token operator\">=</span><span class=\"token string\">\"item in items\"</span> ng<span class=\"token operator\">-</span>bind<span class=\"token operator\">=</span><span class=\"token string\">\"item.name\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>This way we have initial content for search bots and instructions for angular at the same time.</p>\n<p>Note that the solution above works for simple cases but it can be not good for complex pages or if there are many pages. Actually what we do is duplicate the content - we provide static content on the server site and then angular requests content dynamically an overrides static data.</p>\n<p>A better (and more complex) solution is to crawl the website and give static page snapshots to search engines. This can be done with a headless browser like PhantomJS which you can run periodically to generate static page snapshots.</p>\n<p>There is also an easy way to do this - use a service like BromBone. It will do complex part of the job for you and you only need to redirect search bots to static versions of your pages generated by BromBone.</p>","fields":{"slug":"/2014/08/angularjs-and-seo-pre-render-content-on.html","tagSlugs":["/tag/seo/","/tag/angular/"]},"frontmatter":{"date":"2014-08-21T18:46:00.000+07:00","description":"The simple way to make this content SEO-friendly is to pre-render data on the server and then allow angular to do it's job on the client.","tags":["SEO","Angular"],"title":"AngularJS and SEO - pre-render content on the server","fbCommentUrl":null}}},"pageContext":{"slug":"/2014/08/angularjs-and-seo-pre-render-content-on.html"}},"staticQueryHashes":["251939775","2672868365","401334301"]}