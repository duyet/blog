{"componentChunkName":"component---src-templates-post-template-js","path":"/2015/08/cac-ky-thuat-crawler-rut-trich-du-lieu.html","result":{"data":{"markdownRemark":{"id":"38c916ef-d671-5d31-bd88-dff348bd1c03","html":"<p>Nhân dịp tuyển sinh ĐH này, mình có project về thu thập dữ liệu tuyển sinh của các thí sinh trên trang của các trường ĐH. Project này mục tiêu là thu thập toàn bộ thông tin của thí sinh (SBD, tên, tuổi, điểm các môn, nguyện vọng các ngành, trường mà thí sinh nộp xét tuyển, …). Điều oái oăm là mỗi trường công bố dữ liệu 1 cách hết sức … tùm lum và tào lao.\nCó trường hiện đại thì show dữ liệu trực tiếp lên web, trường thì up đại 1 file excel, oái hơn là bỏ vào file pdf :v\nNhiệm vụ của mình là thu thập dữ liệu từ nhiều nguồn thô như vậy một cách tự động. Mỗi trường được viết thành 1 module riêng và có cách để crawler riêng. Bài viết này chủ yếu giới thiệu về các dạng để crawler đặc trưng nhất, và cho thấy được sức mạnh của Nodejs.</p>\n<p><img src=\"https://3.bp.blogspot.com/-Cwxzj6-qXVo/VcXRtQa3L4I/AAAAAAAACss/YD6WVCG84JE/s1600/nodejs-crawler.png\"></p>\n<h4 id=\"github-project\" style=\"position:relative;\"><a href=\"#github-project\" aria-label=\"github project permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Github project</h4>\n<p>Có thể xem thêm code của project tại Github tại đây: <a href=\"https://github.com/duyetdev/Crawler-DKXT-DH-2015\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/duyetdev/Crawler-DKXT-DH-2015</a></p>\n<h2 id=\"bóc-tách-bảng-html-và-dò-đường-với-bảng-có-phân-trang\" style=\"position:relative;\"><a href=\"#b%C3%B3c-t%C3%A1ch-b%E1%BA%A3ng-html-v%C3%A0-d%C3%B2-%C4%91%C6%B0%E1%BB%9Dng-v%E1%BB%9Bi-b%E1%BA%A3ng-c%C3%B3-ph%C3%A2n-trang\" aria-label=\"bóc tách bảng html và dò đường với bảng có phân trang permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bóc tách bảng HTML và dò đường (với bảng có phân trang)</h2>\n<p>Đây là cách dễ và cũng là dạng crawler phổ biến nhất. Với bảng có phân trang, chúng ta phải lập trình để spider có thể dò được link của trang tiếp theo cho đến khi lấy hết được nội dung. </p>\n<p>Mình sử dụng package node-crawler (<a href=\"https://github.com/duyetdev/node-crawler\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/duyetdev/node-crawler</a>)</p>\n<p>Cài đặt: </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ npm install crawler</code></pre></div>\n<p>Crawler module có khả năng:</p>\n<ul>\n<li>Bóc tách HTML theo DOM </li>\n<li>Có thể sử dụng selector của jQuery backend để dò và lấy các phần tử trong trang.</li>\n<li>Điều chỉnh được pool size, số lần request, retries (thử lại nếu request thất bại)</li>\n<li>Điều chỉnh độ ưu tiên của các link.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> Crawler <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"crawler\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> url <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'url'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Crawler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    maxConnections <span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// This will be called for each crawled page</span>\n    <span class=\"token function-variable function\">callback</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">,</span> $</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// $ is Cheerio by default</span>\n        <span class=\"token comment\">//a lean implementation of core jQuery designed specifically for the server</span>\n        <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">index<span class=\"token punctuation\">,</span> a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> toQueueUrl <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'href'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            c<span class=\"token punctuation\">.</span><span class=\"token function\">queue</span><span class=\"token punctuation\">(</span>toQueueUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Queue just one URL, with default callback</span>\nc<span class=\"token punctuation\">.</span><span class=\"token function\">queue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://joshfire.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Queue a list of URLs</span>\nc<span class=\"token punctuation\">.</span><span class=\"token function\">queue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'http://jamendo.com/'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'http://tedxparis.com'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Queue URLs with custom callbacks &amp; parameters</span>\nc<span class=\"token punctuation\">.</span><span class=\"token function\">queue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n    uri<span class=\"token operator\">:</span> <span class=\"token string\">'http://parishackers.org/'</span><span class=\"token punctuation\">,</span>\n    jQuery<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">// The global callback won't be called</span>\n    <span class=\"token function-variable function\">callback</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Grabbed'</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> <span class=\"token string\">'bytes'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Queue using a function</span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">googleSearch</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">search</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">'http://www.google.fr/search?q='</span> <span class=\"token operator\">+</span> search<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nc<span class=\"token punctuation\">.</span><span class=\"token function\">queue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  uri<span class=\"token operator\">:</span> <span class=\"token function\">googleSearch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cheese'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Queue some HTML code directly without grabbing (mostly for tests)</span>\nc<span class=\"token punctuation\">.</span><span class=\"token function\">queue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n    html<span class=\"token operator\">:</span> <span class=\"token string\">'&lt;p>This is a &lt;strong>test&lt;/strong>&lt;/p>'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Đang cập nhật thêm…</p>","fields":{"slug":"/2015/08/cac-ky-thuat-crawler-rut-trich-du-lieu.html","tagSlugs":["/tag/nodejs/","/tag/crawler/"]},"frontmatter":{"date":"2015-08-08T17:11:00.001+07:00","description":"Nhân dịp tuyển sinh ĐH này, mình có project về thu thập dữ liệu tuyển sinh của các thí sinh trên trang của các trường ĐH. Project này mục tiêu là thu thập toàn bộ thông tin của thí sinh (SBD, tên, tuổi, điểm các môn, nguyện vọng các ngành, trường mà thí sinh nộp xét tuyển, ...). Điều oái oăm là mỗi trường công bố dữ liệu 1 cách hết sức ... tùm lum và tào lao.","tags":["Nodejs","crawler"],"title":"Nodejs - Các kỹ thuật Crawler, rút trích dữ liệu với Nodejs","fbCommentUrl":"http://blog.duyetdev.com/2015/08/cac-ky-thuat-crawler-rut-trich-du-lieu.html"}}},"pageContext":{"slug":"/2015/08/cac-ky-thuat-crawler-rut-trich-du-lieu.html"}}}