{"componentChunkName":"component---src-templates-post-template-js","path":"/2019/10/js-shorthand-tips.html","result":{"data":{"markdownRemark":{"id":"9cd02de1-52a6-5357-a563-0eb86522b6e8","html":"<p>These Javascript shorthand tips will make your code look more cool and clean. Let’s begin.</p>\n<!-- toc -->\n<h1 id=\"1--integer-typecasting\" style=\"position:relative;\"><a href=\"#1--integer-typecasting\" aria-label=\"1  integer typecasting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. ’+’: Integer typecasting</h1>\n<p>Most of use do not known that ”+” can be use for Integer typecasting. Like this example:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// longhand</span>\n<span class=\"token keyword\">let</span> num <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"69\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> float <span class=\"token operator\">=</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"69.69\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// shorthand</span>\n<span class=\"token keyword\">let</span> num <span class=\"token operator\">=</span> <span class=\"token operator\">+</span><span class=\"token string\">\"69\"</span>\n<span class=\"token keyword\">let</span> float <span class=\"token operator\">=</span> <span class=\"token operator\">+</span><span class=\"token string\">\"69.69\"</span></code></pre></div>\n<h1 id=\"2-merge-array-object-by-spread-operator\" style=\"position:relative;\"><a href=\"#2-merge-array-object-by-spread-operator\" aria-label=\"2 merge array object by spread operator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Merge array, object by Spread Operator</h1>\n<p>ES6 intro us the most powerful syntax is Spread Operator, I think. It can be used to replace centain array, object functions. The spread operator is simply a series of three dots.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">// longhand </span>\n<span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// shorthand </span>\n<span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>b<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">const</span> y <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>b<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// you can use it anywhere inside an array</span>\n\n<span class=\"token comment\">// Merge two object</span>\n<span class=\"token keyword\">const</span> k <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> hi<span class=\"token operator\">:</span> <span class=\"token string\">'there'</span><span class=\"token punctuation\">,</span> val<span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>k<span class=\"token punctuation\">,</span> foo<span class=\"token operator\">:</span> <span class=\"token string\">'baz'</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Copy</span>\n<span class=\"token keyword\">const</span> aa <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>a<span class=\"token punctuation\">]</span></code></pre></div>\n<h1 id=\"3-function-return\" style=\"position:relative;\"><a href=\"#3-function-return\" aria-label=\"3 function return permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Function Return</h1>\n<p>To return a value from a function we use the <code class=\"language-text\">return</code> keyword, but we can skip that with arrow function with a single statement.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// longhand</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">mul</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> a <span class=\"token operator\">*</span> b\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// shorthand</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">mul</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">*</span> b</code></pre></div>\n<h1 id=\"4-decimal-values\" style=\"position:relative;\"><a href=\"#4-decimal-values\" aria-label=\"4 decimal values permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Decimal Values</h1>\n<p>We can write the long number without trailing zeroes, like this</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// longhand</span>\n<span class=\"token keyword\">const</span> max <span class=\"token operator\">=</span> <span class=\"token number\">1000000</span>\n\n<span class=\"token comment\">// shorthand</span>\n<span class=\"token keyword\">const</span> max <span class=\"token operator\">=</span> <span class=\"token number\">1e6</span>\n\n<span class=\"token number\">1e0</span> <span class=\"token operator\">===</span> <span class=\"token number\">1</span>\n<span class=\"token number\">1e1</span> <span class=\"token operator\">===</span> <span class=\"token number\">10</span>\n<span class=\"token number\">1e2</span> <span class=\"token operator\">===</span> <span class=\"token number\">100</span>\n<span class=\"token number\">1e3</span> <span class=\"token operator\">===</span> <span class=\"token number\">1000</span>\n<span class=\"token number\">1e4</span> <span class=\"token operator\">===</span> <span class=\"token number\">10000</span>\n<span class=\"token number\">1e5</span> <span class=\"token operator\">===</span> <span class=\"token number\">100000</span></code></pre></div>\n<p>Bonus:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> max <span class=\"token operator\">=</span> <span class=\"token number\">1_000_000</span>  \n<span class=\"token keyword\">const</span> num <span class=\"token operator\">=</span> <span class=\"token number\">1_246_357</span>  <span class=\"token comment\">// cool, lah?</span></code></pre></div>\n<h1 id=\"5--bitwise-indexof\" style=\"position:relative;\"><a href=\"#5--bitwise-indexof\" aria-label=\"5  bitwise indexof permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. ’~’: Bitwise IndexOf</h1>\n<p><code class=\"language-text\">~</code> (bitwise NOT) takes one number and inverts all bits of it.\nThe usage of <code class=\"language-text\">~</code> and <code class=\"language-text\">indexOf</code> is, </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// longhand</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* Confirm item IS found */</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* Confirm item IS NOT found */</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// shorthand</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">~</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* Confirm item IS found */</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token operator\">~</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* Confirm item IS NOT found */</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<p>You can use it as a replacement for <code class=\"language-text\">Math.floor()</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// longhand</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token number\">4.9</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">4</span>  <span class=\"token comment\">// true</span>\n\n<span class=\"token comment\">// shorthand</span>\n<span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token number\">4.9</span> <span class=\"token operator\">===</span> <span class=\"token number\">4</span>  <span class=\"token comment\">//true</span></code></pre></div>\n<h1 id=\"6-object-property-value\" style=\"position:relative;\"><a href=\"#6-object-property-value\" aria-label=\"6 object property value permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. Object Property Value</h1>\n<p>If you want to define an object who’s keys have the same name as variables pass-in as properties, try this tip.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> cat <span class=\"token operator\">=</span> <span class=\"token string\">'Miaow'</span>\n<span class=\"token keyword\">const</span> dog <span class=\"token operator\">=</span> <span class=\"token string\">'Woof'</span>\n\n<span class=\"token comment\">// longhand</span>\n<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    cat<span class=\"token operator\">:</span> cat<span class=\"token punctuation\">,</span>\n    dog<span class=\"token operator\">:</span> dog<span class=\"token punctuation\">,</span>\n    bird<span class=\"token operator\">:</span> <span class=\"token string\">'Peet'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// shorthand</span>\n<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    cat<span class=\"token punctuation\">,</span>\n    dog<span class=\"token punctuation\">,</span>\n    bird<span class=\"token operator\">:</span> <span class=\"token string\">'Peet'</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>source: <a href=\"https://alligator.io/js/object-property-shorthand-es6/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://alligator.io/js/object-property-shorthand-es6/</a></p>\n<h1 id=\"7-string-template\" style=\"position:relative;\"><a href=\"#7-string-template\" aria-label=\"7 string template permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. String template</h1>\n<p>Aren’t you tired of using <code class=\"language-text\">+</code> to concatenate multiple variables into a string?</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// longhand </span>\n<span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">'http://'</span> <span class=\"token operator\">+</span> host <span class=\"token operator\">+</span> <span class=\"token string\">':'</span> <span class=\"token operator\">+</span> port <span class=\"token operator\">+</span> <span class=\"token string\">'/'</span> category <span class=\"token operator\">+</span> <span class=\"token string\">'?'</span> <span class=\"token operator\">+</span> params\n\n<span class=\"token comment\">// shorthand</span>\n<span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">http://</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>host<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>port<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>category<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">?</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>params<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span></code></pre></div>\n<p>Writing multi-line strings in code, just use the backticks</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// longhand</span>\n<span class=\"token keyword\">const</span> long_text <span class=\"token operator\">=</span> <span class=\"token string\">'Lorem ipsum dolor sit amet, consectetur'</span>\n    <span class=\"token operator\">+</span> <span class=\"token string\">'adipisicing elit, sed do eiusmod tempor incididunt'</span>\n    <span class=\"token operator\">+</span> <span class=\"token string\">'ut labore et dolore magna aliqua. Ut enim ad minim'</span>\n\n<span class=\"token comment\">// shorthand</span>\n<span class=\"token keyword\">const</span> long_text <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Lorem ipsum dolor sit amet, consectetur\nadipisicing elit, sed do eiusmod tempor incididunt\nut labore et dolore magna aliqua. Ut enim ad minim</span><span class=\"token template-punctuation string\">`</span></span></code></pre></div>\n<h1 id=\"8-exponent-power-shorthand\" style=\"position:relative;\"><a href=\"#8-exponent-power-shorthand\" aria-label=\"8 exponent power shorthand permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. Exponent Power Shorthand</h1>\n<p>Like python</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// longhand</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2^3 = 8</span>\n\n<span class=\"token comment\">// shorthand </span>\n<span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">3</span> <span class=\"token comment\">// 2^3 = 8</span></code></pre></div>\n<hr>\n<p>Thanks for reading, happy coding &#x3C;3</p>","fields":{"slug":"/2019/10/js-shorthand-tips.html","tagSlugs":["/tag/web/","/tag/javascript/","/tag/js/"]},"frontmatter":{"date":"2019-10-20T00:00:00.000+07:00","description":"These Javascript shorthand tips will make your code look more cool and clean.","tags":["Web","Javascript","JS"],"title":"Javascript Shorthands Tips","fbCommentUrl":"none"}}},"pageContext":{"slug":"/2019/10/js-shorthand-tips.html"}}}