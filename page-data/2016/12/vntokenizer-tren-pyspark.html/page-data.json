{"componentChunkName":"component---src-templates-post-template-tsx","path":"/2016/12/vntokenizer-tren-pyspark.html","result":{"data":{"markdownRemark":{"id":"817fa326-d970-5b61-841f-4219a838cc4a","html":"<p>vnTokenizer của tác giả Lê Hồng Phương ở phiên bản thứ 3 (<strong><a href=\"https://github.com/phuonglh/vn.vitk\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">vn.vitk</a></strong>) này được build trên Apache Spark, cho phép xử lý dữ liệu lớn. vn.vitk hỗ trợ các tác vụ: Word segmentation, Part-of-speech tagging, Dependency parsing.</p>\n<p>Tuy nhiên <strong>vn.vitk</strong> được viết trên Java và sử dụng như một công cụ command line tools, khó tùy chỉnh và sử dụng dạng programming:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">./bin/spark-submit ~/vitk/target/vn.vitk-3.0.jar -m <span class=\"token operator\">&lt;</span>master-url<span class=\"token operator\">></span> -i <span class=\"token operator\">&lt;</span>input-file<span class=\"token operator\">></span> -o <span class=\"token operator\">&lt;</span>output-file<span class=\"token operator\">></span> -v</code></pre></div>\n<p>Trong blog này mình sẽ custom lại vn.vitk để có thể chạy như một thư viện lập trình, sử dụng ngôn ngữ python (trên PySpark và Jupyter Notebook).<br>\nXem qua bài viết về cách sử dụng Jupyter Notebook với Apache PySpark: <a href=\"https://blog.duyet.net/2016/09/chay-apache-spark-voi-jupiter-notebook.html#.WEz76RJ97_g\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Chạy Apache Spark với Jupyter Notebook</a></p>\n<p>PySpark sử dụng <strong>py4j</strong> để gọi trực tiếp các thư viện <strong>Spark</strong> trên <strong>Scala/Java</strong>. Vì vậy chúng ta hoàn toàn có thể import các hàm của <strong>vn.vitk trên Python</strong>.</p>\n<p><strong>Chú ý:</strong></p>\n<ol>\n<li>Để custom mã nguồn của vn.vitk, clone project tại đây: <a href=\"https://github.com/phuonglh/vn.vitk\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/phuonglh/vn.vitk</a>, cài đặt trước Java và Maven</li>\n<li>Bạn hoàn toàn có thể sử dụng file <strong><a href=\"https://github.com/duyet/pyspark-vn.vitk/blob/master/lib/vn.vitk-3.0.jar\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">vn.vitk-3.0.jar</a></strong> mình đã build sẵn tại đây mà không cần đọc các bước modified bên dưới. Sử dụng file jar này để submit vào PySpark.</li>\n</ol>\n<h2 id=\"1-vnvitktoktokenizer\" style=\"position:relative;\"><a href=\"#1-vnvitktoktokenizer\" aria-label=\"1 vnvitktoktokenizer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. vn.vitk.tok.Tokenizer</h2>\n<p>Với vn.vitk.tok.Tokenizer, Class này chỉ có Constructor với tham số String sparkMaster (<a href=\"https://github.com/phuonglh/vn.vitk/blob/master/src/main/java/vn/vitk/tok/Tokenizer.java#L77\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">link</a>), địa chỉ của Spark Master. Mình muốn truyền trực tiếp Spark Context từ PySpark vào, thêm vào file <strong><a href=\"https://github.com/phuonglh/vn.vitk/blob/master/src/main/java/vn/vitk/tok/Tokenizer.java#L77\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">vn.vitk/src/main/java/vn/vitk/tok/Tokenizer.java</a></strong></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Tokenizer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JavaSparkContext</span> _jsc<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> lexiconFileName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> regexpFileName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    jsc <span class=\"token operator\">=</span> _jsc<span class=\"token punctuation\">;</span>\n    lexicon <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Lexicon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>lexiconFileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>verbose<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#(nodes of the lexicon) = \"</span> <span class=\"token operator\">+</span> lexicon<span class=\"token punctuation\">.</span><span class=\"token function\">numNodes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> lines <span class=\"token operator\">=</span> jsc<span class=\"token punctuation\">.</span><span class=\"token function\">textFile</span><span class=\"token punctuation\">(</span>regexpFileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> line <span class=\"token operator\">:</span> lines<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            line <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>line<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// ignore comment lines   </span>\n                <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> s <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\s+\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    patterns<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Pattern</span><span class=\"token punctuation\">.</span><span class=\"token function\">compile</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Xem file hoàn chỉnh tại đây: <a href=\"https://github.com/duyet/vn.vitk/blob/master/src/main/java/vn/vitk/tok/Tokenizer.java\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/duyet/vn.vitk/…/java/vn/vitk/tok/Tokenizer.java</a></p>\n<p>Build lại project bằng lệnh: <code class=\"language-text\">mvn compile package</code>, sau khi build thành công file <code class=\"language-text\">vn.vitk-3.0.jar</code> sẽ nằm trong thư mục <code class=\"language-text\">target</code>.</p>\n<h2 id=\"submit-pyspark-và-code\" style=\"position:relative;\"><a href=\"#submit-pyspark-v%C3%A0-code\" aria-label=\"submit pyspark và code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Submit PySpark và code</h2>\n<p>Submit vn.vitk-3.0.jar bằng lệnh:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">PYSPARK_DRIVER_PYTHON</span><span class=\"token operator\">=</span>ipython\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">PYSPARK_DRIVER_PYTHON_OPTS</span><span class=\"token operator\">=</span><span class=\"token string\">\"notebook --NotebookApp.open_browser=False --NotebookApp.ip='*' --NotebookApp.port=8880\"</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">SPARK_HOME</span><span class=\"token operator\">=</span>~/spark-1.6.2-bin-hadoop2.6 <span class=\"token comment\"># Path to home of Spark</span>\npyspark --master <span class=\"token builtin class-name\">local</span> --jars<span class=\"token operator\">=</span>./lib/vn.vitk-3.0.jar --driver-class-path<span class=\"token operator\">=</span>./lib/vn.vitk-3.0.jar</code></pre></div>\n<p>Tham khảo thêm về Notebook PySpark trong bài viết sau: <a href=\"https://blog.duyet.net/2016/09/chay-apache-spark-voi-jupiter-notebook.html#.WEz76RJ97_g\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Chạy Apache Spark với Jupyter Notebook</a><br>\nMở Jupyter notebook trên trình duyệt và code mẫu theo notebook sau:</p>\n<p><a href=\"https://gist.github.com/duyet/e1f8122a015b300456ece1b4f92c69f1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://gist.github.com/duyet/e1f8122a015b300456ece1b4f92c69f1</a></p>\n<p>Kết quả:</p>\n<p><a href=\"https://gist.github.com/duyet/9252f98405738ac63d5d8fd034866dac\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://gist.github.com/duyet/9252f98405738ac63d5d8fd034866dac</a></p>\n<p>Bạn có thể xem toàn bộ mã nguồn, input và output mẫu tại đây: <a href=\"https://github.com/duyet/pyspark-vn.vitk\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/duyet/pyspark-vn.vitk</a></p>\n<h2 id=\"tham-khảo\" style=\"position:relative;\"><a href=\"#tham-kh%E1%BA%A3o\" aria-label=\"tham khảo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tham khảo</h2>\n<ol>\n<li><a href=\"https://github.com/phuonglh/vn.vitk\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/phuonglh/vn.vitk</a></li>\n<li><a href=\"https://github.com/duyet/pyspark-vn.vitk\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/duyet/pyspark-vn.vitk</a></li>\n</ol>","fields":{"slug":"/2016/12/vntokenizer-tren-pyspark.html","tagSlugs":["/tag/data-engineer/","/tag/python/","/tag/javascript/","/tag/py-spark/","/tag/spark/","/tag/vn-tokenizer/","/tag/nlp/","/tag/machine-learning/"]},"frontmatter":{"date":"2016-12-14T08:00:00.001+07:00","description":"Trong blog này mình sẽ custom lại vn.vitk để có thể chạy như một thư viện lập trình, sử dụng ngôn ngữ python (trên PySpark và Jupyter Notebook).","tags":["Data Engineer","Python","javascript","PySpark","Spark","vnTokenizer","NLP","Machine Learning"],"title":"vnTokenizer trên PySpark","fbCommentUrl":"http://blog.duyetdev.com/2016/12/vntokenizer-tren-pyspark.html"}}},"pageContext":{"slug":"/2016/12/vntokenizer-tren-pyspark.html"}},"staticQueryHashes":["251939775","2672868365","401334301"]}