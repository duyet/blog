{"componentChunkName":"component---src-templates-post-template-js","path":"/2016/06/8-dieu-reactjs-beginner-nen-biet.html","result":{"data":{"markdownRemark":{"id":"a0c24688-9826-5565-9ebb-b0435cfba042","html":"<p>Mình bắt đầu nghiên cứu và sử dụng <a href=\"https://facebook.github.io/react/index.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React.js</a> một thời gian. Phải nói React và React Native là một trong nghệ của tương lai, sẽ phát triển mạnh.</p>\n<p>Có một số điểm và kinh nghiệm khi các bạn mới học React hoặc Redux nên biết qua.</p>\n<p><img src=\"https://1.bp.blogspot.com/-KtYQVNUSOhM/V25BbTCHiII/AAAAAAAAYQk/-9QPfR5wy5ImvMrLutGZEklZSuz-0IZkgCK4B/s1600/1-MG736zGtLMBbSkhwu4D3cA.png\"></p>\n<h2 id=\"1-react-chỉ-là-view-library\" style=\"position:relative;\"><a href=\"#1-react-ch%E1%BB%89-l%C3%A0-view-library\" aria-label=\"1 react chỉ là view library permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. React chỉ là View Library</h2>\n<p>React không phải là một MVC framework như những framework khác. Đây chỉ là thư viện của Facebook giúp render ra phần view. Vì thế React sẽ không có phần M - Model và C - Controller, mà phải kết hợp với các thư viện khác. React cũng sẽ không có 2-way binding hay là Ajax, …</p>\n<h2 id=\"2-hãy-giữ-components-luôn-nhỏ-gọn\" style=\"position:relative;\"><a href=\"#2-h%C3%A3y-gi%E1%BB%AF-components-lu%C3%B4n-nh%E1%BB%8F-g%E1%BB%8Dn\" aria-label=\"2 hãy giữ components luôn nhỏ gọn permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Hãy giữ Components luôn nhỏ gọn</h2>\n<p>Bất cứ lập trình giỏi nào cũng đều biết, giữ cho function/class càng nhỏ gọn thì sẽ càng dễ hiểu và dễ bảo trì. Với React cũng vậy, và Components nhỏ sẽ đúng với tinh thần Thinking in React, chia các phần thành các Component nhỏ nhất có thể, để có thể tái sử dụng và hiệu năng cao. Độ chia nhỏ tùy thuộc và mức độ của Team nữa.</p>\n<p>Ví dụ với với Components hiển thị danh sách bài viết liên quan ở cuối:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">LatestPostsComponent</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">props</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>section<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Latest posts<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span> props<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">post</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>PostPreview key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>slug<span class=\"token punctuation\">}</span> post<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>section<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">&lt;LastestPostsComponent /&gt;</code>  chỉ chứa 1 thẻ <code class=\"language-text\">&lt;h1&gt;</code> và mỗi <code class=\"language-text\">posts</code> được truyền cho components khác <code class=\"language-text\">&lt;PostPreview /&gt;</code></p>\n<h2 id=\"3-write-functional-components\" style=\"position:relative;\"><a href=\"#3-write-functional-components\" aria-label=\"3 write functional components permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Write functional components</h2>\n<p>Có nhiều cách để viết Components, thứ nhất sử dụng <code class=\"language-text\">React.createClass()</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> MyComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Và bằng ES6</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>React 0.14 mới cho phép bạn viết nhanh 1 Components bằng 1 hàm với tham số <code class=\"language-text\">props</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">MyComponent</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">props</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Với các Components lớn và nhiều xử lý, nên sử dụng cách 1 hoặc 2. Còn trong đa số các trường hợp khác, Components không cần <code class=\"language-text\">state</code>, chỉ <code class=\"language-text\">render()</code> từ <code class=\"language-text\">props</code> thì nên sử dụng cách thứ 3 này, giúp cho ứng dụng mạch lạc và nhanh hơn.</p>\n<h2 id=\"4-sử-dụng-ít-state-components\" style=\"position:relative;\"><a href=\"#4-s%E1%BB%AD-d%E1%BB%A5ng-%C3%ADt-state-components\" aria-label=\"4 sử dụng ít state components permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Sử dụng ít State components</h2>\n<p>State lưu giữ linh hồn của ứng dụng. React với các ứng dụng lớn và mở rộng liên tục, ta nên giữ State luôn đơn giản (stateless components).</p>\n<ul>\n<li>State làm cho test khó khăn hơn.</li>\n<li>State liên quan đến việc render() hiển thị, mỗi lần render() ta sẽ quan tâm: đã khởi tạo dữ liệu cho state hay chưa, state có thay đổi hay chưa, có nên render() lại hay không, … </li>\n<li>State chỉ tồn tại nội bộ trong 1 Components, với việc trao đổi dữ liệu với bên ngoài, việc sử dụng nhiều  state là không cần thiết. </li>\n</ul>\n<p>Chỉ sử dụng State khi cần thiết, và phản ánh đúng trạng thái của Components.</p>\n<h2 id=\"5-kết-hợp-với-reduxjs\" style=\"position:relative;\"><a href=\"#5-k%E1%BA%BFt-h%E1%BB%A3p-v%E1%BB%9Bi-reduxjs\" aria-label=\"5 kết hợp với reduxjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. Kết hợp với Redux.js</h2>\n<p>React chỉ là View, nên việc kết hợp với <a href=\"http://redux.js.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Redux</a>, Flux, hay bất cứ mô hình luồng dữ liệu là cần thiết. Hiện tại mình thấy Redux đang có khá nhiều người sử dụng, và tư duy của nó cũng khá hay. Sau khi học React bạn tiếp tục kết hợp với Redux trong các ứng dụng.</p>\n<p><a href=\"https://1.bp.blogspot.com/--30x560n-uU/V24_4PXcD3I/AAAAAAAAYQU/vxp2C7rvkNcuGXn8f0WxbyKzNjx-IKzLgCK4B/s1600/1-dODKUGyGkF8qeGLrXKWkiA.png\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><img src=\"https://1.bp.blogspot.com/--30x560n-uU/V24_4PXcD3I/AAAAAAAAYQU/vxp2C7rvkNcuGXn8f0WxbyKzNjx-IKzLgCK4B/s640/1-dODKUGyGkF8qeGLrXKWkiA.png\"></a></p>\n<p>Ảnh: code-cartoons.com</p>\n<p>Một thư viện khác cũng nên quan tâm là <a href=\"https://facebook.github.io/immutable-js/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Immutable.js</a> </p>\n<h2 id=\"6-luôn-sử-dụng-proptypes\" style=\"position:relative;\"><a href=\"#6-lu%C3%B4n-s%E1%BB%AD-d%E1%BB%A5ng-proptypes\" aria-label=\"6 luôn sử dụng proptypes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. Luôn sử dụng propTypes</h2>\n<p><a href=\"https://facebook.github.io/react/docs/reusable-components.html#prop-validation\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">propTypes</a> định nghĩa, ràng buộc cho Props trong React Components, propTypes giúp cho người khác sử dụng các Components của chúng ta an toàn hơn.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">ListOfNumbers</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">props</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>ol className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">{</span>\n      props<span class=\"token punctuation\">.</span>numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ol<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nListOfNumbers<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  className<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n  numbers<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">arrayOf</span><span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Trong môi trường developments, nếu chúng ta truyền vào cho <code class=\"language-text\">props</code> sai kiểu dữ liệu, hoặc quên truyền dữ liệu cho <code class=\"language-text\">props</code>. React sẽ báo lỗi, và chúng ta phải kiểm tra bằng tay.\nỞ ví dụ trên, <code class=\"language-text\">props.className</code> phải có kiểu <code class=\"language-text\">string</code> và <code class=\"language-text\">isRequired</code> (bắt buộc phải có), tương tự <code class=\"language-text\">numbers</code> phải là một <code class=\"language-text\">array</code> của <code class=\"language-text\">number</code></p>\n<h2 id=\"7-sử-dụng-jsx-es6-babel-webpack-và-npm\" style=\"position:relative;\"><a href=\"#7-s%E1%BB%AD-d%E1%BB%A5ng-jsx-es6-babel-webpack-v%C3%A0-npm\" aria-label=\"7 sử dụng jsx es6 babel webpack và npm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. Sử dụng JSX, ES6, Babel, Webpack, và NPM</h2>\n<p><a href=\"https://facebook.github.io/jsx/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">JSX</a> (XML-like syntax extension to ECMAScript) là tính năng hay của React, những gì chúng ta viết sẽ là những gì hiển thị. Kết hợp với Babel, biên dịch và tận dụng <a href=\"http://es6-features.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">các tính năng mới của ES6</a>. <a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NPM</a> và <a href=\"https://webpack.github.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Webpack</a> giúp quá trình đóng gói và tận dụng các thư viện triệt để hơn.</p>\n<h2 id=\"8-sử-dụng-react-và-redux-dev-tools\" style=\"position:relative;\"><a href=\"#8-s%E1%BB%AD-d%E1%BB%A5ng-react-v%C3%A0-redux-dev-tools\" aria-label=\"8 sử dụng react và redux dev tools permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. Sử dụng React và Redux dev tools</h2>\n<p>Cuối cùng các trình Dev Tools của Redux và React sử dụng rất tốt, giúp chúng ta nhanh chóng Debug và tìm ra lỗi trong ứng dụng.</p>\n<p><a href=\"https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React dev tools</a> có thể inspect ngược lại các Components của React, trạng thái các Props và State của từng Component.\nRedux Dev Tools còn <a href=\"https://www.youtube.com/watch?v=xsSnOQynTHs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">hay hơn</a>, giúp bạn quan sát được trạng thái actions, lý do thay đổi State, và back lại state trước. Tải vê Redux Dev Tools ở <a href=\"https://github.com/gaearon/redux-devtools\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github</a> hoặc <a href=\"https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd?hl=en\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Chrome Web Store</a>.</p>\n<p><a href=\"https://4.bp.blogspot.com/-VTtgxf13hdo/V24_YXHeb3I/AAAAAAAAYQM/kOlnn_Izy446MH_zpAmgJQfngN1__PWMgCK4B/s1600/react-dev-tools.jpg\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><img src=\"https://4.bp.blogspot.com/-VTtgxf13hdo/V24_YXHeb3I/AAAAAAAAYQM/kOlnn_Izy446MH_zpAmgJQfngN1__PWMgCK4B/s1600/react-dev-tools.jpg\"></a></p>\n<h2 id=\"tham-khảo\" style=\"position:relative;\"><a href=\"#tham-kh%E1%BA%A3o\" aria-label=\"tham khảo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tham khảo</h2>\n<p><a href=\"http://saveto.co/lm4l1Z\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">A cartoon intro to Redux</a>\n<a href=\"http://saveto.co/oedqhg\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React Developer Tools - Chrome Web Store</a></p>","fields":{"slug":"/2016/06/8-dieu-reactjs-beginner-nen-biet.html","tagSlugs":["/tag/beginner/","/tag/redux/","/tag/redux-dev-tools/","/tag/npm/","/tag/es-6/","/tag/babel/","/tag/react/","/tag/react-dev-tools/"]},"frontmatter":{"date":"2016-06-25T15:35:00.000+07:00","description":"Mình bắt đầu nghiên cứu và sử dụng React.js một thời gian. Phải nói React và React Native là một trong nghệ của tương lai, sẽ phát triển mạnh.","tags":["Beginner","Redux","Redux Dev Tools","NPM","ES6","Babel","React","React Dev Tools"],"title":"8 điều React.js beginner nên biết","fbCommentUrl":"http://blog.duyetdev.com/2016/06/8-dieu-reactjs-beginner-nen-biet.html"}}},"pageContext":{"slug":"/2016/06/8-dieu-reactjs-beginner-nen-biet.html"}}}